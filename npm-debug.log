0 info it worked if it ends with ok
1 verbose cli [ '/usr/bin/nodejs', '/usr/bin/npm', 'install', 'postgres' ]
2 info using npm@3.5.2
3 info using node@v4.7.2
4 silly loadCurrentTree Starting
5 silly install loadCurrentTree
6 silly install readLocalPackageData
7 silly fetchPackageMetaData postgres
8 silly fetchNamedPackageData postgres
9 silly mapToRegistry name postgres
10 silly mapToRegistry using default registry
11 silly mapToRegistry registry https://registry.npmjs.org/
12 silly mapToRegistry uri https://registry.npmjs.org/postgres
13 verbose request uri https://registry.npmjs.org/postgres
14 verbose request no auth needed
15 info attempt registry request try #1 at 9:10:45 AM
16 verbose request id 668f592ddc5ec406
17 http request GET https://registry.npmjs.org/postgres
18 http 200 https://registry.npmjs.org/postgres
19 verbose headers { server: 'nginx/1.10.1',
19 verbose headers   'content-type': 'application/json',
19 verbose headers   'last-modified': 'Tue, 29 Sep 2009 17:21:33 GMT',
19 verbose headers   etag: 'W/"4ac2421d-304"',
19 verbose headers   'content-encoding': 'gzip',
19 verbose headers   'cache-control': 'max-age=300',
19 verbose headers   'content-length': '417',
19 verbose headers   'accept-ranges': 'bytes',
19 verbose headers   date: 'Fri, 30 Jun 2017 13:10:45 GMT',
19 verbose headers   via: '1.1 varnish',
19 verbose headers   age: '0',
19 verbose headers   connection: 'keep-alive',
19 verbose headers   'x-served-by': 'cache-ord1746-ORD',
19 verbose headers   'x-cache': 'MISS',
19 verbose headers   'x-cache-hits': '0',
19 verbose headers   'x-timer': 'S1498828246.809715,VS0,VE49',
19 verbose headers   vary: 'Accept-Encoding' }
20 silly get cb [ 200,
20 silly get   { server: 'nginx/1.10.1',
20 silly get     'content-type': 'application/json',
20 silly get     'last-modified': 'Tue, 29 Sep 2009 17:21:33 GMT',
20 silly get     etag: 'W/"4ac2421d-304"',
20 silly get     'content-encoding': 'gzip',
20 silly get     'cache-control': 'max-age=300',
20 silly get     'content-length': '417',
20 silly get     'accept-ranges': 'bytes',
20 silly get     date: 'Fri, 30 Jun 2017 13:10:45 GMT',
20 silly get     via: '1.1 varnish',
20 silly get     age: '0',
20 silly get     connection: 'keep-alive',
20 silly get     'x-served-by': 'cache-ord1746-ORD',
20 silly get     'x-cache': 'MISS',
20 silly get     'x-cache-hits': '0',
20 silly get     'x-timer': 'S1498828246.809715,VS0,VE49',
20 silly get     vary: 'Accept-Encoding' } ]
21 verbose get saving postgres to /home/joshua/.npm/registry.npmjs.org/postgres/.cache.json
22 silly install normalizeTree
23 silly loadCurrentTree Finishing
24 silly loadIdealTree Starting
25 silly install loadIdealTree
26 silly cloneCurrentTree Starting
27 silly install cloneCurrentTreeToIdealTree
28 silly cloneCurrentTree Finishing
29 silly loadShrinkwrap Starting
30 silly install loadShrinkwrap
31 silly loadShrinkwrap Finishing
32 silly loadAllDepsIntoIdealTree Starting
33 silly install loadAllDepsIntoIdealTree
34 silly resolveWithNewModule postgres@0.0.1 checking installable status
35 silly cache add args [ 'postgres', null ]
36 verbose cache add spec postgres
37 silly cache add parsed spec Result {
37 silly cache add   raw: 'postgres',
37 silly cache add   scope: null,
37 silly cache add   name: 'postgres',
37 silly cache add   rawSpec: '',
37 silly cache add   spec: 'latest',
37 silly cache add   type: 'tag' }
38 silly addNamed postgres@latest
39 verbose addNamed "latest" is being treated as a dist-tag for postgres
40 info addNameTag [ 'postgres', 'latest' ]
41 silly mapToRegistry name postgres
42 silly mapToRegistry using default registry
43 silly mapToRegistry registry https://registry.npmjs.org/
44 silly mapToRegistry uri https://registry.npmjs.org/postgres
45 verbose addNameTag registry:https://registry.npmjs.org/postgres not in flight; fetching
46 verbose get https://registry.npmjs.org/postgres not expired, no request
47 silly addNameTag next cb for postgres with tag latest
48 silly addNamed postgres@0.0.1
49 verbose addNamed "0.0.1" is a plain semver version for postgres
50 silly mapToRegistry name postgres
51 silly mapToRegistry using default registry
52 silly mapToRegistry registry https://registry.npmjs.org/
53 silly mapToRegistry uri https://registry.npmjs.org/postgres
54 verbose addRemoteTarball https://registry.npmjs.org/postgres/-/postgres-0.0.1.tgz not in flight; adding
55 verbose addRemoteTarball [ 'https://registry.npmjs.org/postgres/-/postgres-0.0.1.tgz',
55 verbose addRemoteTarball   '93aecd0a7fcf620792bcc2c87a2ead432adaa833' ]
56 info retry fetch attempt 1 at 9:10:45 AM
57 info attempt registry request try #1 at 9:10:45 AM
58 http fetch GET https://registry.npmjs.org/postgres/-/postgres-0.0.1.tgz
59 http fetch 200 https://registry.npmjs.org/postgres/-/postgres-0.0.1.tgz
60 silly fetchAndShaCheck shasum 93aecd0a7fcf620792bcc2c87a2ead432adaa833
61 verbose addTmpTarball /tmp/npm-11902-ba23f61c/registry.npmjs.org/postgres/-/postgres-0.0.1.tgz not in flight; adding
62 verbose addTmpTarball already have metadata; skipping unpack for postgres@0.0.1
63 silly cache afterAdd postgres@0.0.1
64 verbose afterAdd /home/joshua/.npm/postgres/0.0.1/package/package.json not in flight; writing
65 verbose afterAdd /home/joshua/.npm/postgres/0.0.1/package/package.json written
66 silly loadAllDepsIntoIdealTree Finishing
67 silly idealTree:prePrune date-night-app@1.0.0
67 silly idealTree:prePrune └── postgres@0.0.1
68 silly loadIdealTree Finishing
69 silly currentTree date-night-app@1.0.0
70 silly idealTree date-night-app@1.0.0
70 silly idealTree └── postgres@0.0.1
71 silly generateActionsToTake Starting
72 silly install generateActionsToTake
73 silly generateActionsToTake Finishing
74 silly diffTrees action count 1
75 silly diffTrees add postgres@0.0.1
76 silly decomposeActions action count 8
77 silly decomposeActions fetch postgres@0.0.1
78 silly decomposeActions extract postgres@0.0.1
79 silly decomposeActions test postgres@0.0.1
80 silly decomposeActions preinstall postgres@0.0.1
81 silly decomposeActions build postgres@0.0.1
82 silly decomposeActions install postgres@0.0.1
83 silly decomposeActions postinstall postgres@0.0.1
84 silly decomposeActions finalize postgres@0.0.1
85 silly executeActions Starting
86 silly install executeActions
87 silly doSerial global-install 0
88 silly doParallel fetch 1
89 verbose lock using /home/joshua/.npm/_locks/staging-494a60252ef9c120.lock for /home/joshua/Projects/node_modules/.staging
90 silly doParallel extract 1
91 silly extract postgres@0.0.1
92 verbose unbuild node_modules/.staging/postgres-1f69d89a
93 silly gentlyRm /home/joshua/Projects/node_modules/.staging/postgres-1f69d89a is being purged from base /home/joshua/Projects
94 verbose gentlyRm don't care about contents; nuking /home/joshua/Projects/node_modules/.staging/postgres-1f69d89a
95 verbose tar unpack /home/joshua/.npm/postgres/0.0.1/package.tgz
96 verbose tar unpacking to /home/joshua/Projects/node_modules/.staging/postgres-1f69d89a
97 silly gentlyRm /home/joshua/Projects/node_modules/.staging/postgres-1f69d89a is being purged
98 verbose gentlyRm don't care about contents; nuking /home/joshua/Projects/node_modules/.staging/postgres-1f69d89a
99 silly gunzTarPerm modes [ '755', '644' ]
100 silly gunzTarPerm extractEntry
101 silly gunzTarPerm extractEntry .gitignore
102 silly gunzTarPerm extractEntry ._.npmignore
103 silly gunzTarPerm extractEntry .npmignore
104 silly gunzTarPerm extractEntry binding.cc
105 silly gunzTarPerm extractEntry LICENSE-MIT
106 silly gunzTarPerm extractEntry ._package.json
107 silly gunzTarPerm extractEntry package.json
108 silly gunzTarPerm extractEntry postgres.js
109 silly gunzTarPerm extractEntry README
110 silly gunzTarPerm extractEntry test.js
111 silly gunzTarPerm extractEntry type-oids.h
112 silly gunzTarPerm extractEntry wscript
113 silly gentlyRm /home/joshua/Projects/node_modules/.staging/postgres-1f69d89a/node_modules is being purged
114 verbose gentlyRm don't care about contents; nuking /home/joshua/Projects/node_modules/.staging/postgres-1f69d89a/node_modules
115 silly doParallel preinstall 1
116 silly preinstall postgres@0.0.1 /home/joshua/Projects/node_modules/.staging/postgres-1f69d89a
117 info lifecycle postgres@0.0.1~preinstall: postgres@0.0.1
118 silly lifecycle postgres@0.0.1~preinstall: no script for preinstall, continuing
119 silly doReverseSerial remove 0
120 silly doSerial move 0
121 silly doSerial finalize 1
122 silly finalize /home/joshua/Projects/node_modules/postgres
123 silly doSerial build 1
124 silly build postgres@0.0.1
125 info linkStuff postgres@0.0.1
126 silly linkStuff postgres@0.0.1 has /home/joshua/Projects/node_modules as its parent node_modules
127 verbose linkBins postgres@0.0.1
128 verbose linkMans postgres@0.0.1
129 silly doSerial global-link 0
130 silly doParallel update-linked 0
131 silly doSerial install 1
132 silly install postgres@0.0.1 /home/joshua/Projects/node_modules/.staging/postgres-1f69d89a
133 info lifecycle postgres@0.0.1~install: postgres@0.0.1
134 verbose lifecycle postgres@0.0.1~install: unsafe-perm in lifecycle true
135 verbose lifecycle postgres@0.0.1~install: PATH: /usr/share/npm/bin/node-gyp-bin:/home/joshua/Projects/node_modules/postgres/node_modules/.bin:/home/joshua/Projects/node_modules/.bin:/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/games:/usr/local/games:/snap/bin
136 verbose lifecycle postgres@0.0.1~install: CWD: /home/joshua/Projects/node_modules/postgres
137 silly lifecycle postgres@0.0.1~install: Args: [ '-c', 'node-waf configure build' ]
138 info lifecycle postgres@0.0.1~install: Failed to exec install script
139 verbose unlock done using /home/joshua/.npm/_locks/staging-494a60252ef9c120.lock for /home/joshua/Projects/node_modules/.staging
140 silly rollbackFailedOptional Starting
141 silly rollbackFailedOptional Finishing
142 silly runTopLevelLifecycles Starting
143 silly runTopLevelLifecycles Finishing
144 silly install printInstalled
145 warn date-night-app@1.0.0 No description
146 verbose stack Error: postgres@0.0.1 install: `node-waf configure build`
146 verbose stack spawn ENOENT
146 verbose stack     at ChildProcess.<anonymous> (/usr/share/npm/lib/utils/spawn.js:17:16)
146 verbose stack     at emitTwo (events.js:87:13)
146 verbose stack     at ChildProcess.emit (events.js:172:7)
146 verbose stack     at maybeClose (internal/child_process.js:854:16)
146 verbose stack     at Process.ChildProcess._handle.onexit (internal/child_process.js:222:5)
147 verbose pkgid postgres@0.0.1
148 verbose cwd /home/joshua/Projects/ice-cream-menu
149 error Linux 4.10.0-24-generic
150 error argv "/usr/bin/nodejs" "/usr/bin/npm" "install" "postgres"
151 error node v4.7.2
152 error npm  v3.5.2
153 error file sh
154 error code ELIFECYCLE
155 error errno ENOENT
156 error syscall spawn
157 error postgres@0.0.1 install: `node-waf configure build`
157 error spawn ENOENT
158 error Failed at the postgres@0.0.1 install script 'node-waf configure build'.
158 error Make sure you have the latest version of node.js and npm installed.
158 error If you do, this is most likely a problem with the postgres package,
158 error not with npm itself.
158 error Tell the author that this fails on your system:
158 error     node-waf configure build
158 error You can get information on how to open an issue for this project with:
158 error     npm bugs postgres
158 error Or if that isn't available, you can get their info via:
158 error     npm owner ls postgres
158 error There is likely additional logging output above.
159 verbose exit [ 1, true ]
